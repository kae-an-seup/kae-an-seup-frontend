{"ast":null,"code":"var _jsxFileName = \"/Users/seoeunseo/project/kae-an-seup-frontend/src/Toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleSwitchStyled = styled.div`\n  width: 40px;\n  height: 20px;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  position: relative;\n  background-color: ${props => props.isOn ? '#00cc00' : '#ccc'}; // 색상을 조건부로 설정\n\n  &:after {\n    content: '';\n    width: 16px;\n    height: 16px;\n    background-color: #fff;\n    border-radius: 50%;\n    position: absolute;\n    top: 2px;\n    left: ${props => props.isOn ? 'calc(100% - 18px)' : '2px'};\n    display: block;\n    transition: left 0.3s;\n  }\n`;\n_c = ToggleSwitchStyled;\nfunction ToggleSwitch({\n  isOn\n}) {\n  _s();\n  const [toggleState, setToggleState] = useState(isOn); // isOn을 초기 상태로 설정\n\n  const toggleSwitch = () => {\n    setToggleState(!toggleState);\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleSwitchStyled, {\n    onClick: toggleSwitch,\n    isOn: toggleState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(ToggleSwitch, \"sXLtuMQnW/qrjJ5pKJoKfIS5v+Q=\");\n_c2 = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleSwitchStyled\");\n$RefreshReg$(_c2, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ToggleSwitchStyled","div","props","isOn","_c","ToggleSwitch","_s","toggleState","setToggleState","toggleSwitch","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/seoeunseo/project/kae-an-seup-frontend/src/Toggle.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleSwitchStyled = styled.div`\n  width: 40px;\n  height: 20px;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  position: relative;\n  background-color: ${(props) => (props.isOn ? '#00cc00' : '#ccc')}; // 색상을 조건부로 설정\n\n  &:after {\n    content: '';\n    width: 16px;\n    height: 16px;\n    background-color: #fff;\n    border-radius: 50%;\n    position: absolute;\n    top: 2px;\n    left: ${(props) => (props.isOn ? 'calc(100% - 18px)' : '2px')};\n    display: block;\n    transition: left 0.3s;\n  }\n`;\n\nfunction ToggleSwitch({ isOn }) {\n    const [toggleState, setToggleState] = useState(isOn); // isOn을 초기 상태로 설정\n  \n    const toggleSwitch = () => {\n      setToggleState(!toggleState);\n    };\n  \n    return (\n      <ToggleSwitchStyled onClick={toggleSwitch} isOn={toggleState} />\n    );\n  }\n  \nexport default ToggleSwitch"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAuBC,KAAK,IAAMA,KAAK,CAACC,IAAI,GAAG,SAAS,GAAG,MAAQ;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAaD,KAAK,IAAMA,KAAK,CAACC,IAAI,GAAG,mBAAmB,GAAG,KAAO;AAClE;AACA;AACA;AACA,CAAC;AAACC,EAAA,GArBIJ,kBAAkB;AAuBxB,SAASK,YAAYA,CAAC;EAAEF;AAAK,CAAC,EAAE;EAAAG,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA,CAACC,kBAAkB;IAACU,OAAO,EAAED,YAAa;IAACN,IAAI,EAAEI;EAAY;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpE;AAACR,EAAA,CAVMD,YAAY;AAAAU,GAAA,GAAZV,YAAY;AAYrB,eAAeA,YAAY;AAAA,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}